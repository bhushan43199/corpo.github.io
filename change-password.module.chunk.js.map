{"version":3,"sources":["M:/corporate/corporate/corporate/src/app/services/passwordvalidator.ts","M:/corporate/corporate/corporate/src/app/views/change-password/change-password-routing.module.ts","M:/corporate/corporate/corporate/src/app/views/change-password/change-password.component.html","M:/corporate/corporate/corporate/src/app/views/change-password/change-password.component.scss","M:/corporate/corporate/corporate/src/app/views/change-password/change-password.component.ts","M:/corporate/corporate/corporate/src/app/views/change-password/change-password.module.ts"],"names":[],"mappings":"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","file":"change-password.module.chunk.js","sourcesContent":["import { Directive, forwardRef, Attribute, Input } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[validateEqual]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: ChangePasswordEqualValidator, multi: true }\r\n    ]\r\n})\r\nexport class ChangePasswordEqualValidator implements Validator {\r\n\r\n    @Input() validateEqual: string;\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n\r\n        const controlTocompare = control.parent.get(this.validateEqual);\r\n        if (controlTocompare && controlTocompare.value !== control.value) {\r\n            return { 'notEqual': true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/services/passwordvalidator.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {  } from '../my-venue/my-venue.component';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePasswordComponent,\r\n    data: {\r\n      title: 'Change Password'\r\n    }\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChangePasswordRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/change-password/change-password-routing.module.ts","module.exports = \"<ng4-loading-spinner></ng4-loading-spinner>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h4 class=\\\"mb-3\\\">Change Password</h4>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <p class=\\\"text-muted\\\"></p>\\r\\n          <form name=\\\"newpasswordForm\\\" #newpasswordForm=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <label for=\\\"password\\\">Enter New Password :</label>\\r\\n                <div class=\\\"input-group mb-4\\\">\\r\\n                  <input [type]=\\\"passwordType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.PASSWORD\\\" name=\\\"PASSWORD\\\"\\r\\n                    #PASSWORD=\\\"ngModel\\\" (change)=\\\"newpasswordForm.control.updateValueAndValidity()\\\"\\r\\n                    placeholder=\\\"Enter New password\\\" required>\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span class=\\\"input-group-text\\\" (click)=\\\"togglePassword()\\\"><i [class]=\\\"eyeIcon\\\"></i></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                  *ngIf=\\\"PASSWORD.errors && (PASSWORD.touched || PASSWORD.dirty && newpasswordForm.submitted)\\\">Password\\r\\n                  is required</span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"password\\\">Retype New Password :</label>\\r\\n                <div class=\\\"  input-group mb-4\\\">\\r\\n                  <input [type]=\\\"passwordType2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.confirmPassword\\\"\\r\\n                    name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" validateEqual=\\\"PASSWORD\\\"\\r\\n                    placeholder=\\\"Retype password\\\" required>\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <span class=\\\"input-group-text\\\" (click)=\\\"togglePassword2()\\\"><i [class]=\\\"eyeIcon2\\\"></i></span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                  *ngIf=\\\"confirmPassword.errors && (confirmPassword.touched || confirmPassword.dirty && confirmPassword.errors?.required && userRegiForm.submitted)\\\">Password\\r\\n                  is required</span>\\r\\n                <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                  *ngIf=\\\"confirmPassword.errors && (confirmPassword.touched || confirmPassword.dirty && confirmPassword.errors?.notEqual && !confirmPassword.errors?.required)\\\">Password\\r\\n                  is not match</span>\\r\\n              </div>\\r\\n            </div>\\r\\n      \\r\\n          </form>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button type=\\\"button\\\" [disabled]=\\\"!newpasswordForm.valid\\\" (click)=\\\"changePassword()\\\"\\r\\n                class=\\\"btn btn-primary btn-block btn-ch mb-3\\\">Submit</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button class=\\\"btn btn-block btn-ch\\\" routerLink=\\\"/dashboard\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// M:/corporate/corporate/corporate/src/app/views/change-password/change-password.component.html\n// module id = ../../../../../src/app/views/change-password/change-password.component.html\n// module chunks = change-password.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// M:/corporate/corporate/corporate/src/app/views/change-password/change-password.component.scss\n// module id = ../../../../../src/app/views/change-password/change-password.component.scss\n// module chunks = change-password.module","import { Component, OnInit } from '@angular/core';\r\nimport { ToasterService, ToasterConfig } from 'angular2-toaster';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { UserService, AuthenticationService } from 'app/services';\r\nimport { Router } from '@angular/router';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  passwordType: string = 'password';\r\n  passwordShown: boolean = false;\r\n  eyeIcon: String = 'fa fa-eye';\r\n  passwordType2: string = 'password';\r\n  passwordShown2: boolean = false;\r\n  eyeIcon2: String = 'fa fa-eye';\r\n  public toasterService: ToasterService;\r\n  public user: any = {};\r\n  public toasterconfig: ToasterConfig =\r\n    new ToasterConfig({\r\n      tapToDismiss: true,\r\n      timeout: 10000\r\n    });\r\n  constructor(public authenticationService: AuthenticationService, private formBuilder: FormBuilder, toasterService: ToasterService, public userService: UserService, public router: Router, private SpinnerService: Ng4LoadingSpinnerService) {\r\n    this.toasterService = toasterService;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public togglePassword() {\r\n\r\n    if (this.passwordShown) {\r\n      this.passwordShown = false;\r\n      this.passwordType = 'password'\r\n      this.eyeIcon = \"fa fa-eye\"\r\n    } else {\r\n      this.passwordShown = true;\r\n      this.passwordType = 'text';\r\n      this.eyeIcon = \"fa fa-eye-slash\";\r\n    }\r\n  }\r\n\r\n  public togglePassword2() {\r\n\r\n    if (this.passwordShown2) {\r\n      this.passwordShown2 = false;\r\n      this.passwordType2 = 'password'\r\n      this.eyeIcon2 = \"fa fa-eye\"\r\n    } else {\r\n      this.passwordShown2 = true;\r\n      this.passwordType2 = 'text';\r\n      this.eyeIcon2 = \"fa fa-eye-slash\";\r\n    }\r\n  }\r\n\r\n  changePassword() {\r\n    this.SpinnerService.show();\r\n    this.userService.changePassword(this.user)\r\n      .subscribe(\r\n        data => {\r\n          if (data.verify != 1) {\r\n            this.SpinnerService.hide();\r\n            this.toasterService.pop('error', 'Error', 'Email not match');\r\n          }\r\n          else {\r\n            this.SpinnerService.hide();\r\n            this.toasterService.pop('success', 'Done', 'Password has been Change...');\r\n            this.authenticationService.isLogout();\r\n            this.router.navigate(['/pages/home']);\r\n    \r\n          }\r\n        },\r\n        error => {\r\n          this.SpinnerService.hide();\r\n          console.log(error);\r\n        });\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/change-password/change-password.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { ChangePasswordEqualValidator } from 'app/services/passwordvalidator';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ChangePasswordRoutingModule,\r\n    ToasterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng4LoadingSpinnerModule.forRoot()\r\n  ],\r\n  declarations: [ChangePasswordComponent, ChangePasswordEqualValidator]\r\n})\r\nexport class ChangePasswordModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/change-password/change-password.module.ts"],"sourceRoot":"webpack:///"}