{"version":3,"sources":["M:/corporate/corporate/corporate/src/app/services/userPassValidator.ts","M:/corporate/corporate/corporate/src/app/views/users/datafilterpipe.ts","M:/corporate/corporate/corporate/src/app/views/users/users-routing.module.ts","M:/corporate/corporate/corporate/src/app/views/users/users.component.html","M:/corporate/corporate/corporate/src/app/views/users/users.component.scss","M:/corporate/corporate/corporate/src/app/views/users/users.component.ts","M:/corporate/corporate/corporate/src/app/views/users/users.module.ts"],"names":[],"mappings":"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","file":"users.module.chunk.js","sourcesContent":["import { Directive, forwardRef, Attribute, Input } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[validateEqual]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: UserEqualValidator, multi: true }\r\n    ]\r\n})\r\nexport class UserEqualValidator implements Validator {\r\n\r\n    @Input() validateEqual: string;\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n\r\n        const controlTocompare = control.parent.get(this.validateEqual);\r\n        if (controlTocompare && controlTocompare.value !== control.value) {\r\n            return { 'notEqual': true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/services/userPassValidator.ts","import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataFilter'\r\n})\r\nexport class UserDataFilterPipe implements PipeTransform {\r\n\r\n  transform(array: any[], query: string): any {\r\n    if (query) {\r\n      return _.filter(array, row=>row.FIRST_NAME.toLowerCase().indexOf(query.toLowerCase()) > -1);\r\n    }\r\n    return array;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/users/datafilterpipe.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UsersComponent } from './users.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UsersComponent,\r\n    data: {\r\n      title: 'Users'\r\n    }\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/users/users-routing.module.ts","module.exports = \"\\r\\n<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\\r\\n<ng4-loading-spinner></ng4-loading-spinner>\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\"><i class=\\\"fa fa-users\\\"></i> Users \\r\\n      <button *ngIf=\\\"loggedInUserRole === '1' || loggedInUserRole === '0'\\\" class=\\\"btn btn-primary float-right\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" tooltip=\\\"Add User\\\"\\r\\n        (click)=\\\"successModal.show();\\\">\\r\\n        <i class=\\\"fa fa-plus fa-lg\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row mb-3\\\">\\r\\n        <div class=\\\"col-md-4 offset-md-8\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by name\\\" />\\r\\n            <span class=\\\"input-group-append\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n            </span>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table table-striped table-responsive\\\" [mfData]=\\\"userlist | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\"\\r\\n        [mfRowsOnPage]=\\\"10\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>\\r\\n              #\\r\\n            </th>\\r\\n            <th>\\r\\n              <mfDefaultSorter by=\\\"name\\\">Name</mfDefaultSorter>\\r\\n            </th>\\r\\n            <th>\\r\\n              Phone\\r\\n            </th>\\r\\n            <th>\\r\\n              Email\\r\\n            </th>\\r\\n            <th>\\r\\n              Address\\r\\n            </th>\\r\\n            <th *ngIf=\\\"loggedInUserRole === '1' || loggedInUserRole === '0'\\\">\\r\\n              Action\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of mf.data\\\">\\r\\n            <td><input type=\\\"checkbox\\\" /></td>\\r\\n            <!-- <img [src]=\\\"img\\\" height=\\\"30px\\\" width=\\\"30px\\\" style=\\\"border-radius: 5px;\\\"> -->\\r\\n            <td> {{user.FIRST_NAME}} {{user.LAST_NAME}}</td>\\r\\n            <td><i class=\\\"fa fa-whatsapp\\\" aria-hidden=\\\"true\\\"></i> {{user.PHONE}}</td>\\r\\n            <td><a routerLink=\\\"/compose-mail\\\">{{user.EMAIL}}</a></td>\\r\\n            <td><i class=\\\"fa fa-map-marker\\\"></i> {{user.ADDRESS}}</td>\\r\\n            <td *ngIf=\\\"loggedInUserRole === '1' || loggedInUserRole === '0'\\\"> <button class=\\\"btn btn-primary btn-sm\\\" style=\\\"margin-bottom: 4px\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\"\\r\\n                tooltip=\\\"Edit User\\\" (click)=\\\"successModal.show()\\\">\\r\\n                <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n              <button  class=\\\"btn btn-danger btn-sm\\\" style=\\\"margin-bottom: 4px\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" tooltip=\\\"Delete user\\\" (click)=\\\"deleteUser(user)\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <tr>\\r\\n            <td colspan=\\\"10\\\">\\r\\n              <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div bsModal #successModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static',keyboard: 'false'}\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <form #userRegiForm=\\\"ngForm\\\" name=\\\"updateUserForm\\\" novalidate>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Add User</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"successModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label for=\\\"fname\\\">First name :</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter First name\\\" [(ngModel)]=\\\"user.FIRST_NAME\\\"\\r\\n                      name=\\\"FIRST_NAME\\\" #FIRST_NAME=\\\"ngModel\\\" required>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"FIRST_NAME.errors && (FIRST_NAME.touched || userRegiForm.submitted)\\\">First Name is\\r\\n                      required</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label for=\\\"lname\\\">Last name :</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Last name\\\" [(ngModel)]=\\\"user.LAST_NAME\\\"\\r\\n                      name=\\\"LAST_NAME\\\" #LAST_NAME=\\\"ngModel\\\" required>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"LAST_NAME.errors && (LAST_NAME.touched || userRegiForm.submitted)\\\">Last Name is\\r\\n                      required</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label for=\\\"email\\\">Email :</label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.EMAIL\\\" name=\\\"EMAIL\\\" #EMAIL=\\\"ngModel\\\"\\r\\n                      placeholder=\\\"Enter email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" required>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"EMAIL.errors && (EMAIL.valid || EMAIL.dirty || EMAIL.touched || userRegiForm.submitted)\\\">Email\\r\\n                      is required and format should be\\r\\n                      <i>john@doe.com</i>.</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label for=\\\"gender\\\">Gender :\\r\\n                    </label>\\r\\n                    <ng-select [items]=\\\"genders\\\" bindLabel=\\\"label\\\" bindValue=\\\"value\\\" placeholder=\\\"Select Gender\\\"\\r\\n                      [(ngModel)]=\\\"user.GENDER\\\" #GENDER=\\\"ngModel\\\" name=\\\"GENDER\\\" required>\\r\\n                    </ng-select>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"GENDER.errors && (GENDER.touched || userRegiForm.submitted)\\\">Gender is\\r\\n                      required</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label for=\\\"phone\\\">Phone :</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.PHONE\\\" name=\\\"PHONE\\\" #PHONE=\\\"ngModel\\\"\\r\\n                      (keypress)=\\\"keyPress($event)\\\" minlength=10 maxlength=10 placeholder=\\\"Enter your phone\\\">\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"PHONE.errors && (PHONE.touched || userRegiForm.submitted)\\\">Phone is\\r\\n                      required. </span>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label for=\\\"address\\\">Address :</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Address\\\" [(ngModel)]=\\\"user.ADDRESS\\\"\\r\\n                      name=\\\"ADDRESS\\\" #ADDRESS=\\\"ngModel\\\" required>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"ADDRESS.errors && (ADDRESS.touched || userRegiForm.submitted)\\\">Address is required</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\" *ngIf=\\\"user.ROLE != 1 && user.ROLE != 2\\\">\\r\\n                    <label for=\\\"address\\\">Qualification:</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Qaulification\\\"\\r\\n                      [(ngModel)]=\\\"user.QUALIFICATION\\\" name=\\\"QUALIFICATION\\\" #QUALIFICATION=\\\"ngModel\\\" required>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"QUALIFICATION.errors && (QUALIFICATION.touched || userRegiForm.submitted)\\\">Qaulification is\\r\\n                      required</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-4\\\" *ngIf=\\\"user._id === undefined\\\">\\r\\n                    <label for=\\\"password\\\">Password :</label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <input [type]=\\\"passwordType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.PASSWORD\\\" name=\\\"PASSWORD\\\"\\r\\n                        #PASSWORD=\\\"ngModel\\\" (change)=\\\"confirmPassword.control.updateValueAndValidity()\\\"\\r\\n                        placeholder=\\\"Enter password\\\" required>\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\" (click)=\\\"togglePassword()\\\"><i [class]=\\\"eyeIcon\\\"></i></span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"PASSWORD.errors && (PASSWORD.touched || PASSWORD.dirty && userRegiForm.submitted)\\\">Password\\r\\n                      is required</span>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\" *ngIf=\\\"user._id === undefined\\\">\\r\\n                    <label for=\\\"password\\\">Repeat Password :</label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <input [type]=\\\"passwordType2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.confirmPassword\\\"\\r\\n                        name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" validateEqual=\\\"PASSWORD\\\"\\r\\n                        placeholder=\\\"Repeat password\\\" required>\\r\\n                      <div class=\\\"input-group-append\\\">\\r\\n                        <span class=\\\"input-group-text\\\" (click)=\\\"togglePassword2()\\\"><i [class]=\\\"eyeIcon2\\\"></i></span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"confirmPassword.errors && (confirmPassword.touched || confirmPassword.dirty && confirmPassword.errors?.required && userRegiForm.submitted)\\\">Password\\r\\n                      is required</span>\\r\\n                    <span class=\\\"help-block\\\" style=\\\"color: red;\\\"\\r\\n                      *ngIf=\\\"confirmPassword.errors && (confirmPassword.touched || confirmPassword.dirty && confirmPassword.errors?.notEqual && !confirmPassword.errors?.required)\\\">Password\\r\\n                      is not match</span>\\r\\n                    <!-- <p class=\\\"bg-danger\\\" *ngIf=\\\"confirmPassword.errors && (confirmPassword.touched || confirmPassword.dirty && confirmPassword.errors?.required && userForm.submitted)\\\">Password is required.</p>\\r\\n                    <p class=\\\"bg-danger\\\" *ngIf=\\\"confirmPassword.errors && (confirmPassword.touched || confirmPassword.dirty && confirmPassword.errors?.notEqual && !confirmPassword.errors?.required)\\\">Password is not match.</p> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"successModal.hide()\\\">Close</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" [disabled]=\\\"!userRegiForm.form.valid\\\"\\r\\n            *ngIf=\\\"user._id === undefined\\\" (click)=\\\"createUser(); successModal.hide()\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" [disabled]=\\\"!userRegiForm.form.valid\\\"\\r\\n            *ngIf=\\\"user._id != undefined\\\" (click)=\\\"updateUser(); successModal.hide()\\\">Update</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// M:/corporate/corporate/corporate/src/app/views/users/users.component.html\n// module id = ../../../../../src/app/views/users/users.component.html\n// module chunks = users.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// M:/corporate/corporate/corporate/src/app/views/users/users.component.scss\n// module id = ../../../../../src/app/views/users/users.component.scss\n// module chunks = users.module","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UserService } from 'app/services';\r\nimport { ToasterConfig, ToasterService } from 'angular2-toaster';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss', '../../../scss/vendors/toastr/toastr.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  userlist: any = [];\r\n  public data: any;\r\n  public user: any = {};\r\n  loggedInUserRole: any;\r\n  public genders = [\r\n    { label: \"Male\", value: \"male\" },\r\n    { label: \"Female\", value: \"female\" }\r\n  ];\r\n  loading: any;\r\n  \r\n  constructor(private _user_service: UserService, private toasterService: ToasterService,public spinnerService:Ng4LoadingSpinnerService) {\r\n    this.getAllRegisterdUsers();\r\n    this.loggedInUserRole = localStorage.getItem('ROLE')\r\n  }\r\n\r\n  public toasterconfig: ToasterConfig =\r\n  new ToasterConfig({\r\n    tapToDismiss: true,\r\n    timeout: 5000\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.data = [\r\n      {\r\n        img: \"assets/img/xs/avatar1.jpg\",\r\n        name: \"jhon smith\",\r\n        phone: \"264-625-2583\",\r\n        email: \"johnsmith@gmail.com\",\r\n        address: \"123 6th St. Melbourne, FL 32904\"\r\n      },\r\n      {\r\n        img: \"assets/img/xs/avatar2.jpg\",\r\n        name: \"Hossein Shams\t\",\r\n        phone: \"264-625-5689\",\r\n        email: \"hosseinshams@gmail.com\",\r\n        address: \"44 Shirley Ave. West Chicago, IL 60185\"\r\n      },\r\n      {\r\n        img: \"assets/img/xs/avatar3.jpg\",\r\n        name: \"Maryam Amiri\",\r\n        phone: \"264-625-9513\",\r\n        email: \"maryamamiri@gmail.com\",\r\n        address: \"123 6th St. Melbourne, FL 32904\"\r\n      },\r\n      {\r\n        img: \"assets/img/xs/avatar4.jpg\",\r\n        name: \"Tim Hank\",\r\n        phone: \"264-625-1212\",\r\n        email: \"timhank@gmail.com\",\r\n        address: \"70 Bowman St. South Windsor, CT 06074\"\r\n      },\r\n\r\n\r\n    ]\r\n  }\r\n\r\n\r\n  getAllRegisterdUsers() {\r\n    this.spinnerService.show();\r\n    this._user_service.getAllRegisterdUsers()\r\n      .subscribe(\r\n        data => {\r\n          if (data.verify == '1') {\r\n            this.spinnerService.hide();\r\n            this.userlist = data.data;\r\n            this.userlist = this.userlist.filter(data => data.ROLE == 3);\r\n          } else {\r\n            this.spinnerService.hide();\r\n            this.toasterService.pop('error', 'ooops..', 'Something went wrong !')\r\n          }\r\n        },\r\n        error => {\r\n          this.spinnerService.hide();\r\n          console.log(error);\r\n          this.toasterService.pop('error', 'Server Error', 'Something went wrong !')\r\n        });\r\n  }\r\n\r\n  updateUser() {\r\n    this.spinnerService.show()\r\n    this.loading = true;\r\n    this._user_service.updateUser(this.user)\r\n      .subscribe(\r\n        data => {\r\n          if (data.verify == '1') {\r\n            this.spinnerService.hide();\r\n            this.toasterService.pop('success', 'Done', 'User Updated');\r\n            this.getAllRegisterdUsers();\r\n          } else {\r\n            this.spinnerService.hide();\r\n            this.toasterService.pop('error', 'ooops..', 'Something went wrong !')\r\n          }\r\n        },\r\n        error => {\r\n          this.spinnerService.hide();\r\n          this.toasterService.pop('error', 'Server Error', 'Something went wrong !')\r\n          this.loading = false;\r\n        });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/users/users.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UsersComponent } from './users.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataTableModule } from 'angular2-datatable';\r\nimport { UserDataFilterPipe } from './datafilterpipe';\r\nimport { ModalModule } from 'ngx-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { UserEqualValidator } from 'app/services/userPassValidator';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    ModalModule.forRoot(),\r\n    DataTableModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ToasterModule,\r\n    Ng4LoadingSpinnerModule.forRoot()\r\n  ],\r\n  declarations: [UsersComponent, UserDataFilterPipe, UserEqualValidator]\r\n})\r\nexport class UsersModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// M:/corporate/corporate/corporate/src/app/views/users/users.module.ts"],"sourceRoot":"webpack:///"}